Q1 - SCENARIO
A car rental company called FastCarz has a .net Web Application and Web API which are recently migrated from on-premise system to Azure cloud using Azure Web App Service
and Web API Service.
The on-premises system had 3 environments Dev, QA and Prod.
The code repository was maintained in TFS and moved to Azure GIT now. The TFS has daily builds which triggers every night which build the solution and copy the build package to drop folder.
deployments were done to the respective environment manually. The customer is planning to setup Azure DevOps service for below requirements:

1) The build should trigger as soon as anyone in the dev team checks in code to master branch.
2) There will be test projects which will create and maintained in the solution along the Web and API. The trigger should build all the 3 projects - Web, API and test.
   The build should not be successful if any test fails.
3) The deployment of code and artifacts should be automated to Dev environment. 
4) Upon successful deployment to the Dev environment, deployment should be easily promoted to QA and Prod through automated process.
5) The deployments to QA and Prod should be enabled with Approvals from approvers only.

Explain how each of the above the requirements will be met using Azure DevOps configuration.
Explain the steps with configuration details.



Solution:

1)	We have to enable the continuous Integration trigger in the triggers tab of your build pipeline in the pipelines tab of azure devops page. So that you can check that whenever any code commit happens to your master branch the build will get triggered automatically.
2)	To achieve the second statement we can run the build pipeline by adding  web, api and test tasks in one yaml file ( Azure pipelines.yml ) and 
we can write custom conditions in the pipeline YAML files, like under that particular test in the build stage of YAML file we can echo it that if the test fails build should fail. or whatever the test tasks that we are adding in the pipeline we should not check the continue on error in control options of that task. It should work.
3)	Yes we can automate the process code in the artifact to dev environment by enabling the continuous deployment trigger in the artifacts of that release pipeline.
4)	If we are not adding any specific approvals to all the stages automatically the deployment will proceed to QA and Prod after the successful deployment in the DEV environment. ( Deployment trigger should enable ). we have to make sure the stages were configured properly  in the triggers tab of pre-deployment conditions that after which stage the deployment should happen.
5)	We can achieve the requirement, where we can add the approvers in pre-deployment approvers in pre-deployment conditions of that particular QA and Prod stages.
